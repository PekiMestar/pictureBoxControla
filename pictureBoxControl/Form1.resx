<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>